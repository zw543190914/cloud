<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.cloud.mybatis.plus.mapper.ProductRecordMapper">

    <resultMap id="BaseResultMap" type="com.zw.cloud.mybatis.plus.entity.ProductRecord">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="product_info_id" jdbcType="BIGINT" property="productInfoId" />
        <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
        <result column="device_id" jdbcType="BIGINT" property="deviceId" />
        <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
        <result column="product_card_code" jdbcType="VARCHAR" property="productCardCode" />
        <result column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="color_no" jdbcType="VARCHAR" property="colorNo" />
        <result column="color" jdbcType="VARCHAR" property="color" />
        <result column="fabric_no" jdbcType="VARCHAR" property="fabricNo" />
        <result column="fabric_name" jdbcType="VARCHAR" property="fabricName" />
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
        <result column="fabric_width" jdbcType="VARCHAR" property="fabricWidth" />
        <result column="gram_weight" jdbcType="DECIMAL" property="gramWeight" />
        <result column="gram_heft" jdbcType="INTEGER" property="gramHeft" />
        <result column="weft_density" jdbcType="VARCHAR" property="weftDensity" />
        <result column="plan_meters" jdbcType="DECIMAL" property="planMeters" />
        <result column="defects_number" jdbcType="INTEGER" property="defectsNumber" />
        <result column="severity" jdbcType="VARCHAR" property="severity" />
        <result column="result" jdbcType="VARCHAR" property="result" />
        <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
        <result column="upper_door_width" jdbcType="DOUBLE" property="upperDoorWidth" />
        <result column="lower_door_width" jdbcType="DOUBLE" property="lowerDoorWidth" />
        <result column="scan_time" jdbcType="TIMESTAMP" property="scanTime" />
        <result column="pre_status" jdbcType="VARCHAR" property="preStatus" />
        <result column="after_status" jdbcType="VARCHAR" property="afterStatus" />
        <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
        <result column="save_time" jdbcType="TIMESTAMP" property="saveTime" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="source" jdbcType="TINYINT" property="source" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_user" jdbcType="VARCHAR" property="createUser" />
        <result column="create_system" jdbcType="VARCHAR" property="createSystem" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
        <result column="update_system" jdbcType="VARCHAR" property="updateSystem" />
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
        <result column="pt_quantity" jdbcType="DECIMAL" property="ptQuantity" />
        <result column="product_no" jdbcType="BIGINT" property="productNo" />
        <result column="product_sort" jdbcType="BIGINT" property="productSort" />
        <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
        <result column="markup_craft" jdbcType="VARCHAR" property="markupCraft" />
        <result column="team_group" jdbcType="VARCHAR" property="teamGroup" />
        <result column="avg_car_speed" jdbcType="DECIMAL" property="avgCarSpeed" />
        <result column="avg_temperature" jdbcType="DECIMAL" property="avgTemperature" />
        <result column="avg_wind_speed" jdbcType="DECIMAL" property="avgWindSpeed" />
        <result column="avg_top_feed" jdbcType="DECIMAL" property="avgTopFeed" />
        <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
        <result column="defect" property="defect" typeHandler="com.zw.cloud.mybatis.plus.db.typehandlers.JsonTypeHandler" />
        <result column="assistant" property="assistant" typeHandler="com.zw.cloud.mybatis.plus.db.typehandlers.JsonTypeHandler" />

        <result column="schedule_date" jdbcType="TIMESTAMP" property="scheduleDate" />
        <result column="team_group_id" jdbcType="BIGINT" property="teamGroupId" />
        <result column="team_group_name" jdbcType="VARCHAR" property="teamGroupName" />
        <result column="team_shift_id" jdbcType="BIGINT" property="teamShiftId" />
        <result column="team_shift_name" jdbcType="VARCHAR" property="teamShiftName" />
        <result column="workshop_id" jdbcType="BIGINT" property="workshopId" />
        <result column="workshop_name" jdbcType="VARCHAR" property="workshopName" />
        <result column="schedule_start_time" jdbcType="TIMESTAMP" property="scheduleStartTime" />
        <result column="schedule_end_time" jdbcType="TIMESTAMP" property="scheduleEndTime" />
        <result column="calc_day" jdbcType="TIMESTAMP" property="calcDay" />
        <result column="pre_car_number" jdbcType="VARCHAR" property="preCarNumber" />
        <result column="operator_info" property="operatorInfo" typeHandler="com.zw.cloud.mybatis.plus.db.typehandlers.JsonTypeHandler" />
        <result column="front_operator" jdbcType="VARCHAR" property="frontOperator" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="matches" jdbcType="VARCHAR" property="matches" />
        <result column="expected_time" jdbcType="VARCHAR" property="expectedTime" />
        <result column="actual_time" jdbcType="VARCHAR" property="actualTime" />
        <result column="exception_type" jdbcType="VARCHAR" property="exceptionType" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="product_weight_min" jdbcType="VARCHAR" property="productWeightMin" />
        <result column="product_weight_max" jdbcType="VARCHAR" property="productWeightMax" />
        <result column="quality_status" jdbcType="TINYINT" property="qualityStatus"/>
        <result column="schedule_import" jdbcType="TINYINT" property="scheduleImport" />
        <result column="process_code" jdbcType="VARCHAR" property="processCode" />
        <result column="platform" property="platform" />
        <result column="product_code" jdbcType="VARCHAR" property="productCode" />
        <result column="shrinkage" property="shrinkage" />
        <result column="product_weight" jdbcType="VARCHAR" property="productWeight" />
        <result column="thickness" jdbcType="VARCHAR" property="thickness" />
        <result column="process_report_type" jdbcType="TINYINT" property="processReportType" />
        <result column="assistant_exception_type" property="assistantExceptionType" />
        <result column="craft_exception_type" property="craftExceptionType" />

    </resultMap>

    <select id="queryAllFinishedProductForReport" resultMap="BaseResultMap">
        select id,device_id,device_name,customer_name,fabric_name,fabric_no,color,employee_name,batch_no,product_card_code,workshop_name,
        pt_quantity,gram_weight,gram_heft,product_weight,lower_door_width,avg_temperature,avg_car_speed,defect,car_number,
        markup_craft,result,craft_type,operator,end_time
        from base_product_record
        where org_code = #{record.orgCode,jdbcType=VARCHAR}  and platform = 0
        <if test="record.historyProductInfoIdList != null and record.historyProductInfoIdList.size &gt; 0">
            and product_info_id in
            <foreach collection="record.historyProductInfoIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.startTime != null and record.endTime != null">
            and end_time > #{record.startTime} and end_time &lt;= #{record.endTime}
        </if>
        <!-- <if test="record.productCardCode != null and record.productCardCode !='' ">
             and product_card_code = #{record.productCardCode,jdbcType=VARCHAR}
         </if>-->
        <if test="record.productCardCode != null and record.productCardCode !='' ">
            and product_card_code like concat('%', #{record.productCardCode,jdbcType=VARCHAR}, '%')
        </if>
        and pre_status = 2
        <if test="record.deviceIdList != null and record.deviceIdList.size() &gt; 0">
            and device_id in
            <foreach collection="record.deviceIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>
        <if test="record.sqlExceptionType == 1" >
            and (exception_type in
            <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 2" >
            and (assistant_exception_type in
            <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 3" >
            and (craft_exception_type = #{record.craftExceptionType}
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            )
        </if>

        <if test="record.customerName != null and record.customerName.size() &gt; 0">
            and customer_name in
            <foreach collection="record.customerName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricName != null and record.fabricName.size() &gt; 0">
            and fabric_name in
            <foreach collection="record.fabricName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricNo != null and record.fabricNo.size() &gt; 0">
            and fabric_no in
            <foreach collection="record.fabricNo" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>


        <if test="record.result != null and record.result.size() &gt; 0">
            and result in
            <foreach collection="record.result" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>


        <if test="record.markupCraft != null and record.markupCraft.size() &gt; 0">
            and markup_craft in
            <foreach collection="record.markupCraft" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.teamGroup != null and record.teamGroup.size() &gt; 0">
            and team_group in
            <foreach collection="record.teamGroup" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.craftTypeList != null and record.craftTypeList.size() &gt; 0">
            and craft_type in
            <foreach collection="record.craftTypeList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.sourceConvertList != null and record.sourceConvertList.size() &gt; 0">
            and source in
            <foreach collection="record.sourceConvertList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <!--<if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
            and exception_type in
            <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>-->

        <if test="record.defect != null and record.defect.size() &gt; 0" >
            and
            <foreach collection="record.defect" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(defect,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.assistant != null and record.assistant.size() &gt; 0">
            and
            <foreach collection="record.assistant" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(assistant,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.operator != null and record.operator.size() &gt; 0">
            and
            <foreach collection="record.operator" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(operator_info,JSON_OBJECT('userName', #{listItem}))
            </foreach>
        </if>

        <if test="record.preOperator != null and record.preOperator.size() &gt; 0">
            and pre_operator in
            <foreach collection="record.preOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.frontOperator != null and record.frontOperator.size() &gt; 0">
            and front_operator in
            <foreach collection="record.frontOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        and is_deleted = 0 order by id
    </select>
    
    <select id="pageQueryAllFinishedProductForReport" resultMap="BaseResultMap">
        select *
        from base_product_record
        where org_code = #{record.orgCode,jdbcType=VARCHAR}  and platform = 0
        <if test="record.historyProductInfoIdList != null and record.historyProductInfoIdList.size &gt; 0">
            and product_info_id in
            <foreach collection="record.historyProductInfoIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.startTime != null and record.endTime != null">
            and end_time > #{record.startTime} and end_time &lt;= #{record.endTime}
        </if>
        <!-- <if test="record.productCardCode != null and record.productCardCode !='' ">
             and product_card_code = #{record.productCardCode,jdbcType=VARCHAR}
         </if>-->

        <if test="record.productCardCode != null and record.productCardCode !='' ">
            and product_card_code like concat('%', #{record.productCardCode,jdbcType=VARCHAR}, '%')
        </if>
        and pre_status = 2
        <if test="record.deviceIdList != null and record.deviceIdList.size() &gt; 0">
            and device_id in
            <foreach collection="record.deviceIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>
        <if test="record.customerName != null and record.customerName.size() &gt; 0">
            and customer_name in
            <foreach collection="record.customerName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricName != null and record.fabricName.size() &gt; 0">
            and fabric_name in
            <foreach collection="record.fabricName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricNo != null and record.fabricNo.size() &gt; 0">
            and fabric_no in
            <foreach collection="record.fabricNo" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>


        <if test="record.result != null and record.result.size() &gt; 0">
            and result in
            <foreach collection="record.result" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>


        <if test="record.markupCraft != null and record.markupCraft.size() &gt; 0">
            and markup_craft in
            <foreach collection="record.markupCraft" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.teamGroup != null and record.teamGroup.size() &gt; 0">
            and team_group in
            <foreach collection="record.teamGroup" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.craftTypeList != null and record.craftTypeList.size() &gt; 0">
            and craft_type in
            <foreach collection="record.craftTypeList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.sourceConvertList != null and record.sourceConvertList.size() &gt; 0">
            and source in
            <foreach collection="record.sourceConvertList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.sqlExceptionType == 1" >
            and (exception_type in
            <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 2" >
            and (assistant_exception_type in
            <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 3" >
            and (craft_exception_type = #{record.craftExceptionType}
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            )
        </if>


        <if test="record.defect != null and record.defect.size() &gt; 0" >
            and
            <foreach collection="record.defect" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(defect,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.assistant != null and record.assistant.size() &gt; 0">
            and
            <foreach collection="record.assistant" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(assistant,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.operator != null and record.operator.size() &gt; 0">
            and
            <foreach collection="record.operator" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(operator_info,JSON_OBJECT('userName', #{listItem}))
            </foreach>
        </if>

        <if test="record.preOperator != null and record.preOperator.size() &gt; 0">
            and pre_operator in
            <foreach collection="record.preOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.frontOperator != null and record.frontOperator.size() &gt; 0">
            and front_operator in
            <foreach collection="record.frontOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        and is_deleted = 0 order by id limit #{record.start} , #{record.pageSize}
    </select>

    <select id="countAllFinishedProductForReport" resultType="int">
        select count(*)
        from base_product_record
        where org_code = #{record.orgCode,jdbcType=VARCHAR}  and platform = 0
        <if test="record.historyProductInfoIdList != null and record.historyProductInfoIdList.size &gt; 0">
            and product_info_id in
            <foreach collection="record.historyProductInfoIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.startTime != null and record.endTime != null">
            and end_time > #{record.startTime} and end_time &lt;= #{record.endTime}
        </if>

        <if test="record.productCardCode != null and record.productCardCode !='' ">
            and product_card_code like concat('%', #{record.productCardCode,jdbcType=VARCHAR}, '%')
        </if>
        and pre_status = 2
        <if test="record.deviceIdList != null and record.deviceIdList.size() &gt; 0">
            and device_id in
            <foreach collection="record.deviceIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>
        <if test="record.sqlExceptionType == 1" >
            and (exception_type in
            <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 2" >
            and (assistant_exception_type in
            <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                #{listItem}
            </foreach>
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.craftExceptionType != null" >
                or craft_exception_type = #{record.craftExceptionType}
            </if>

            )
        </if>

        <if test="record.sqlExceptionType == 3" >
            and (craft_exception_type = #{record.craftExceptionType}
            <if test="record.exceptionConvertList != null and record.exceptionConvertList.size() &gt; 0">
                or exception_type in
                <foreach collection="record.exceptionConvertList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            <if test="record.convertAssistantList != null and record.convertAssistantList.size() &gt; 0">
                or assistant_exception_type in
                <foreach collection="record.convertAssistantList" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                </foreach>
            </if>
            )
        </if>

        <if test="record.customerName != null and record.customerName.size() &gt; 0">
            and customer_name in
            <foreach collection="record.customerName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricName != null and record.fabricName.size() &gt; 0">
            and fabric_name in
            <foreach collection="record.fabricName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricNo != null and record.fabricNo.size() &gt; 0">
            and fabric_no in
            <foreach collection="record.fabricNo" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>


        <if test="record.result != null and record.result.size() &gt; 0">
            and result in
            <foreach collection="record.result" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>

        <if test="record.markupCraft != null and record.markupCraft.size() &gt; 0">
            and markup_craft in
            <foreach collection="record.markupCraft" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.teamGroup != null and record.teamGroup.size() &gt; 0">
            and team_group in
            <foreach collection="record.teamGroup" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.craftTypeList != null and record.craftTypeList.size() &gt; 0">
            and craft_type in
            <foreach collection="record.craftTypeList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.sourceConvertList != null and record.sourceConvertList.size() &gt; 0">
            and source in
            <foreach collection="record.sourceConvertList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.defect != null and record.defect.size() &gt; 0" >
            and
            <foreach collection="record.defect" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(defect,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.assistant != null and record.assistant.size() &gt; 0">
            and
            <foreach collection="record.assistant" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(assistant,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.operator != null and record.operator.size() &gt; 0">
            and
            <foreach collection="record.operator" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(operator_info,JSON_OBJECT('userName', #{listItem}))
            </foreach>
        </if>


        <if test="record.preOperator != null and record.preOperator.size() &gt; 0">
            and pre_operator in
            <foreach collection="record.preOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.frontOperator != null and record.frontOperator.size() &gt; 0">
            and front_operator in
            <foreach collection="record.frontOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        and is_deleted = 0
    </select>

    <select id="queryProductRecordExceptionList" resultMap="BaseResultMap">
        select exception_type,assistant_exception_type,craft_exception_type
        from base_product_record
        where org_code = #{record.orgCode,jdbcType=VARCHAR}
        <if test="record.historyProductInfoIdList != null and record.historyProductInfoIdList.size &gt; 0">
            and product_info_id in
            <foreach collection="record.historyProductInfoIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.startTime != null and record.endTime != null">
            and end_time > #{record.startTime} and end_time &lt;= #{record.endTime}
        </if>

        <if test="record.productCardCode != null and record.productCardCode !='' ">
            and product_card_code = #{record.productCardCode,jdbcType=VARCHAR}
        </if>
        and pre_status = 2
        <if test="record.deviceIdList != null and record.deviceIdList.size() &gt; 0">
            and device_id in
            <foreach collection="record.deviceIdList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>
        and (exception_type in (1,2,3) or assistant_exception_type = 1 or craft_exception_type = 1)
        and platform = 0
        <if test="record.customerName != null and record.customerName.size() &gt; 0">
            and customer_name in
            <foreach collection="record.customerName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricName != null and record.fabricName.size() &gt; 0">
            and fabric_name in
            <foreach collection="record.fabricName" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.fabricNo != null and record.fabricNo.size() &gt; 0">
            and fabric_no in
            <foreach collection="record.fabricNo" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.result != null and record.result.size() &gt; 0">
            and result in
            <foreach collection="record.result" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>

        </if>


        <if test="record.markupCraft != null and record.markupCraft.size() &gt; 0">
            and markup_craft in
            <foreach collection="record.markupCraft" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.teamGroup != null and record.teamGroup.size() &gt; 0">
            and team_group in
            <foreach collection="record.teamGroup" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.craftTypeList != null and record.craftTypeList.size() &gt; 0">
            and craft_type in
            <foreach collection="record.craftTypeList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>

        <if test="record.sourceConvertList != null and record.sourceConvertList.size() &gt; 0">
            and source in
            <foreach collection="record.sourceConvertList" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.defect != null and record.defect.size() &gt; 0" >
            and
            <foreach collection="record.defect" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(defect,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.assistant != null and record.assistant.size() &gt; 0">
            and
            <foreach collection="record.assistant" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(assistant,JSON_OBJECT('name', #{listItem}))
            </foreach>
        </if>
        <if test="record.operator != null and record.operator.size() &gt; 0">
            and
            <foreach collection="record.operator" item="listItem" open="(" close=")" separator=" or " >
                JSON_CONTAINS(operator_info,JSON_OBJECT('userName', #{listItem}))
            </foreach>
        </if>


        <if test="record.preOperator != null and record.preOperator.size() &gt; 0">
            and pre_operator in
            <foreach collection="record.preOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        <if test="record.frontOperator != null and record.frontOperator.size() &gt; 0">
            and front_operator in
            <foreach collection="record.frontOperator" item="listItem" open="(" close=")" separator="," >
                #{listItem}
            </foreach>
        </if>
        and is_deleted = 0
    </select>

</mapper>
