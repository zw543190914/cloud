server:
  port: 8000 # 指定网关服务的端口
spring:
  environment: test
  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848
#        namespace: f0acd74c-f780-4b01-9c05-fe669cb07270
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
        add-to-simple-url-handler-mapping: true

      discovery:
        locator:
          # 让gateway可以发现nacos中的微服务
          enabled: true
          lower-case-service-id: true
      # 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]
      routes:
        # 当前路由的标识, 要求唯一
        - id: feign-provider01
          # lb指的是从nacos中按照名称获取微服务,并遵循负载均衡策略
          uri: lb://feign-provider/**
          # 路由的优先级,数字越小级别越高
          order: 1
          # 断言(就是路由转发要满足的条件)
          predicates:
            # 当请求路径满足Path指定的规则时,才进行路由转发
            # http://127.0.0.1:8000/feign-provider/user/queryAllUser/1/10
            - Path=/feign-provider/**
          # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
          filters:
            # 转发之前去掉1层路径
            - StripPrefix=1
        - id: feign-consumer01
          uri: lb://feign-consumer
          predicates:
            # http://127.0.0.1:8000/feign-consumer/feign/consumer/queryAllUser/1/10
            - Path=/feign-consumer/**
          filters:
            - StripPrefix=1
        - id: dubbo-consumer
          uri: lb://dubbo-consumer
          predicates:
            # http://127.0.0.1:8000/dubbo-consumer/dubbo/consumer/consumerToProvider/consumer
            - Path=/dubbo-consumer/**
          filters:
            - StripPrefix=1

      httpclient:
        connect-timeout: 3000
        response-timeout: 30s
    loadbalancer:
      retry:
        enabled: true
#  main:
#    allow-circular-references: true
